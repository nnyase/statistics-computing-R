table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>% mutate(type = rownames(PDE_table))
colnames(PDE_table) <- c('type','before','after')
PDE_table
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>% mutate(type = rownames(PDE_table))
PDE_table
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>% relocate(type, .before = before_df)%>% mutate(type = rownames(PDE_table))
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>% relocate(type,before = before_df)%>% mutate(type = rownames(PDE_table))
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>% mutate(type = rownames(PDE_table))
row.names(PDE_table) <- ID
PDE_table
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>%
rename(before_df = before)
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>%
rename(before_df = before)
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>%
mutate(type = rownames(PDE_table))
row.names(PDE_table) <- ID
names(PDE_table)[1] <- 'Before'
names(PDE_table)[2] <- 'After'
PDE_table
PDE_table_plus1 <- PDE_table + 1
bugs$Software == 'PDE
bugs$Software == 'PDE'
bugs$Software == 'PDE'
bugs[bugs$Software == 'PDE']
bugs[bugs$Software == 'PDE',]
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
st <- dataset[dataset$Software == softwareType,]
}
queryRate
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
st <- dataset[dataset$Software == softwareType,]
head(st)
return(head(st))
}
queryRate
queryRate()
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
datasetSoftwareType <- dataset[dataset$Software == softwareType & dataset$Severity == errorSeverity & beta == beta,]
return()
}
queryRate()
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
datasetsub <- dataset[dataset$Software == softwareType & dataset$Severity == errorSeverity & beta == beta,]
return(datasetsub)
}
queryRate()
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
datasetsub <- dataset[dataset$Software == softwareType &
dataset$Severity == errorSeverity &
beta == beta,]
n <- nrow(dataset[dataset$Software == softwareType,])
k <- nrow(datasetsub)
print(k,n)
return(datasetsub)
}
queryRate()
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
datasetsub <- dataset[dataset$Software == softwareType &
dataset$Severity == errorSeverity &
beta == beta,]
n <- nrow(dataset[dataset$Software == softwareType,])
k <- nrow(datasetsub)
print(k)
print(n)
return(datasetsub)
}
queryRate()
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
datasetsub <- dataset[dataset$Software == softwareType &
dataset$Severity == errorSeverity &
beta == beta,]
n <- nrow(dataset[dataset$Software == softwareType,])
k <- nrow(datasetsub)
lambda <- k/n
query <- list("k" = k, "n" = n, "lambda" = lambda)
return(query)
}
queryRate(softwareType = 'PDE', errorSeverity = 'Low',beta = 'Before')
library(knitr)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = F, message = F, include = T, warning=F)
# Open the CSV in root directory
bugs <- read.csv("./bugs.csv", sep =";")
# Change Bugs in Severity Column to Low
bugs[which(bugs$Severity == "Bugs"),2] <- "Low"
# Print first 10 observations of bugs data
head(bugs, n=10)
# Identify the counts == 0 in df
bugs[bugs$Count == 0, ]
# Change the count of 0 to 10
bugs$Count[bugs$Count == 0] <- 10
# Show 5 number summary
summary(bugs$Count)
# Initialize empty data-frame to put in totals for each software
columns = c("Software","Total")
total_bugs = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(total_bugs) <- columns
# Loop over software to sum all counts and put in empty data-frame
for (software in unique(bugs$Software)){
total <- sum(bugs$Count[bugs$Software == software])
total_bugs[nrow(total_bugs) + 1,] <- c(software, total)
}
total_bugs$Total <- as.numeric(total_bugs$Total)
ggplot(total_bugs, aes(x=Software,y= Total)) + geom_col(alpha = 0.8)
# Use max function to find after beta testing - answer (374)
max(bugs$Count[bugs$Beta == "After"])
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
PDE_table <- PDE_table %>%
mutate(type = rownames(PDE_table))
row.names(PDE_table) <- ID
names(PDE_table)[1] <- 'Before'
names(PDE_table)[2] <- 'After'
PDE_table
bugs$logCount <- log(bugs$Count +1)
round(mean(bugs$logCount), digits=3)
queryRate <- function(dataset=bugs,softwareType ="PDE",errorSeverity="Low", beta="Before"){
datasetsub <- dataset[dataset$Software == softwareType &
dataset$Severity == errorSeverity &
beta == beta,]
n <- nrow(dataset[dataset$Software == softwareType,])
k <- nrow(datasetsub)
lambda <- k/n
query <- list("k" = k, "n" = n, "lambda" = lambda)
return(query)
}
queryRate(softwareType = 'PDE', errorSeverity = 'Low',beta = 'Before')
library(knitr)
knitr::opts_chunk$set(echo = F, message = F, include = T, warning=F)
#setwd("C:/Users/dchih/Documents/Masters of Fintech/STA5075Z/MySTA5075Zanalyses/Assignment")
library(readxl)
bugs <- read.csv2("~/Desktop/statistics-computing-R/practicals/assignment/bugs.csv", header = TRUE)
bugs[which(bugs$Severity == "Bugs"),2] <- c(rep("Low", length(bugs[which(bugs$Severity == "Bugs"),2])))
bugs[1:10,]
mistaked_counts <- bugs[which(bugs$Count == 0),]
mistaked_counts
bugs[which(bugs$Count == 0),4] <- c(rep(10,nrow(mistaked_counts)))
View(bugs) ## The data is now fixed
summary(bugs$Count)
str(bugs)
bugs_class <- cbind.data.frame(as.factor(bugs$Software),as.factor(bugs$Severity),as.factor(bugs$Beta),as.integer(bugs$Count))
names(bugs_class) <- names(bugs)
bugs_class
str(bugs_class)
total_software_bugs <- c()
for (i in levels(bugs_class$Software)) {
total_software_bugs[i] <- sum(bugs_class[which(bugs_class$Software == i), 4])
}
total_software_bugs
barplot(total_software_bugs)
after_beta_bugs <- bugs[which(bugs$Beta == "After"),]
max(after_beta_bugs$Count)
## The max bugs found after beta testing is 374
PDE_data <- bugs_class[which(bugs_class$Software == "PDE"),]
before <- c()
after <- c()
for (i in levels(PDE_data$Severity)) {
before[i] <- sum(PDE_data[which(PDE_data$Severity == i & PDE_data$Beta == "Before"),4])
after[i] <- sum(PDE_data[which(PDE_data$Severity == i & PDE_data$Beta == "After"),4])
}
PDE_table_plus1 <- PDE_table + 1
library(knitr)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = F, message = F, include = T, warning=F)
# Open the CSV in root directory
bugs <- read.csv("./bugs.csv", sep =";")
# Change Bugs in Severity Column to Low
bugs[which(bugs$Severity == "Bugs"),2] <- "Low"
# Print first 10 observations of bugs data
head(bugs, n=10)
# Identify the counts == 0 in df
bugs[bugs$Count == 0, ]
# Change the count of 0 to 10
bugs$Count[bugs$Count == 0] <- 10
# Show 5 number summary
summary(bugs$Count)
# Initialize empty data-frame to put in totals for each software
columns = c("Software","Total")
total_bugs = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(total_bugs) <- columns
# Loop over software to sum all counts and put in empty data-frame
for (software in unique(bugs$Software)){
total <- sum(bugs$Count[bugs$Software == software])
total_bugs[nrow(total_bugs) + 1,] <- c(software, total)
}
total_bugs$Total <- as.numeric(total_bugs$Total)
ggplot(total_bugs, aes(x=Software,y= Total)) + geom_col(alpha = 0.8)
# Use max function to find after beta testing - answer (374)
max(bugs$Count[bugs$Beta == "After"])
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs[which(bugs$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in levels(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
# add type as column in df
PDE_table <- PDE_table %>%
mutate(type = rownames(PDE_table))
#Rename Columns correctly
PDE_table
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs[which(bugs$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in unique(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
# add type as column in df
PDE_table <- PDE_table %>%
mutate(type = rownames(PDE_table))
#Rename Columns correctly
PDE_table
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs[which(bugs$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in unique(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
# add type as column in df
PDE_table <- PDE_table %>%
mutate(type = rownames(PDE_table))
row.names(PDE_table) <- ID
#Rename Columns correctly
names(PDE_table)[1] <- 'Before'
names(PDE_table)[2] <- 'After'
PDE_table
# create a df of only PDE bugs instances
#Create empty vectors to store before and after bug types
PDE_data <- bugs[which(bugs$Software == "PDE"),]
before <- c()
after <- c()
before_df <- c()
after_df <- c()
for (type in unique(PDE_data$Severity)) {
before_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "Before"),4])
after_total <- sum(PDE_data[which(PDE_data$Severity == type & PDE_data$Beta == "After"),4])
before<- append(before,rep(type,before_total))
after<- append(after,rep(type,after_total))
before_df[type] <- before_total
after_df[type] <- after_total
}
# Asked for a table datatype, but tables only take in one column to provide a frequency table of instances.
table(before)
table(after)
# dataframe showing before and after in a tabular format
PDE_table <- cbind.data.frame(before_df, after_df)
# number of rows in data frame
num_rows = nrow(PDE_table)
# creating ID column vector
ID <- c(1:num_rows)
# add type as column in df
PDE_table <- PDE_table %>%
mutate(type = rownames(PDE_table)) %>% relocate(type, .before = before_df)
row.names(PDE_table) <- ID
#Rename Columns correctly
names(PDE_table)[1] <- 'Before'
names(PDE_table)[2] <- 'After'
PDE_table
